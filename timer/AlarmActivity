package com.krdonon.timer.alarm

import android.app.Activity
import android.os.Build
import android.os.Bundle
import android.view.WindowManager
import android.widget.SeekBar
import android.widget.TextView
import com.krdonon.timer.R

class AlarmActivity : Activity() {

    private lateinit var alarmTitle: TextView
    private lateinit var alarmLabel: TextView
    private lateinit var sliderDismiss: SeekBar

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_alarm)

        // ✅ 잠금 화면 위 표시 & 화면 켜기
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1) {
            setShowWhenLocked(true)
            setTurnScreenOn(true)
        } else {
            @Suppress("DEPRECATION")
            window.addFlags(
                WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED or
                        WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON
            )
        }

        alarmTitle = findViewById(R.id.alarmTitle)
        alarmLabel = findViewById(R.id.alarmLabel)
        sliderDismiss = findViewById(R.id.sliderDismiss)

        val label = intent.getStringExtra(AlarmService.EXTRA_LABEL)
            ?: getString(R.string.timer_default)
        alarmLabel.text = label

        // 슬라이더로 해제
        sliderDismiss.progress = 0
        sliderDismiss.setOnSeekBarChangeListener(object : SeekBar.OnSeekBarChangeListener {
            override fun onProgressChanged(seekBar: SeekBar?, progress: Int, fromUser: Boolean) {
                if (progress >= 95) dismissAlarm()
            }

            override fun onStartTrackingTouch(seekBar: SeekBar?) {}
            override fun onStopTrackingTouch(seekBar: SeekBar?) {
                if ((seekBar?.progress ?: 0) < 95) seekBar?.progress = 0
            }
        })
    }

    private fun dismissAlarm() {
        // ✅ Service 중지 (applicationContext 사용 → 잠금 상태에서도 확실히 동작)
        AlarmService.stop(applicationContext)

        // ✅ UI 닫기
        sliderDismiss.progress = 0
        finish()
    }
}
