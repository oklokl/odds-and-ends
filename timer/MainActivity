package com.krdonon.timer

import android.Manifest
import android.app.AlarmManager
import android.content.Context
import android.content.Intent
import android.content.pm.PackageManager
import android.os.Build
import android.os.Bundle
import android.provider.Settings
import android.widget.Button
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import androidx.fragment.app.Fragment

class MainActivity : AppCompatActivity() {

    companion object {
        private const val REQ_CODE_POST_NOTIFICATIONS = 1001
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        // ✅ 앱 시작 시 권한 요청
        requestNotificationPermission()
        requestExactAlarmPermission()

        // 초기 로드 시 StopWatchFragment를 로드
        if (savedInstanceState == null) {
            loadFragment(StopWatchFragment(), "stopwatch")
        }

        // 버튼 리스너 연결
        findViewById<Button>(R.id.btnStopwatch).setOnClickListener {
            loadFragment(StopWatchFragment(), "stopwatch")
        }
        findViewById<Button>(R.id.btnTimer).setOnClickListener {
            loadFragment(TimerFragment(), "timer")
        }
    }

    /** ✅ replace 대신 show/hide → 상태 유지 */
    private fun loadFragment(fragment: Fragment, tag: String) {
        val ft = supportFragmentManager.beginTransaction()
        val existing = supportFragmentManager.findFragmentByTag(tag)

        // 현재 붙어있는 프래그먼트들 모두 숨기기
        supportFragmentManager.fragments.forEach { ft.hide(it) }

        if (existing == null) {
            ft.add(R.id.fragment_container, fragment, tag)
        } else {
            ft.show(existing)
        }

        ft.commit()
    }

    /** ✅ Android 13 이상 알림 권한 */
    private fun requestNotificationPermission() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {
            if (ContextCompat.checkSelfPermission(
                    this,
                    Manifest.permission.POST_NOTIFICATIONS
                ) != PackageManager.PERMISSION_GRANTED
            ) {
                ActivityCompat.requestPermissions(
                    this,
                    arrayOf(Manifest.permission.POST_NOTIFICATIONS),
                    REQ_CODE_POST_NOTIFICATIONS
                )
            }
        }
    }

    /** ✅ Android 12 이상 정확한 알람 권한 */
    private fun requestExactAlarmPermission() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
            val alarmManager = getSystemService(Context.ALARM_SERVICE) as AlarmManager
            if (!alarmManager.canScheduleExactAlarms()) {
                val intent = Intent(Settings.ACTION_REQUEST_SCHEDULE_EXACT_ALARM)
                startActivity(intent)
            }
        }
    }

    override fun onRequestPermissionsResult(
        requestCode: Int,
        permissions: Array<out String>,
        grantResults: IntArray
    ) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
        if (requestCode == REQ_CODE_POST_NOTIFICATIONS) {
            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                // 알림 권한 허용됨
            } else {
                // 알림 권한 거부됨 → 사용자에게 안내 가능
            }
        }
    }
}
